-- ********************************************
-- KURYELER TABLOSU (COURIERS)
-- * Hiyerarşi (supervisor_id) ve Atama Sırası (on_duty_since) için temel.
-- ********************************************
CREATE TABLE couriers (
    courier_id SERIAL PRIMARY KEY,
    full_name VARCHAR(100) NOT NULL,
    phone_number VARCHAR(20) UNIQUE NOT NULL,
    email VARCHAR(100) UNIQUE,
    working_model VARCHAR(50) NOT NULL DEFAULT 'Shift', -- 'Shift', 'Joker'
    status VARCHAR(20) NOT NULL DEFAULT 'Offline',
    registration_date TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    
    -- Kaptanlık Hiyerarşisi (Self-Referencing)
    supervisor_id INT, 
    CONSTRAINT fk_supervisor_courier
        FOREIGN KEY (supervisor_id)
        REFERENCES couriers (courier_id)
        ON DELETE SET NULL,
        
    -- Sıra Tabanlı Atama (FIFO)
    on_duty_since TIMESTAMP WITH TIME ZONE -- En son ne zaman vardiyaya başladığı (Sıralama Anahtarı)
);

-- ********************************************
-- İŞLETMELER TABLOSU (BUSINESSES)
-- * Paket talebi oluşturan firmaların bilgileri.
-- ********************************************
CREATE TABLE businesses (
    business_id SERIAL PRIMARY KEY,
    name VARCHAR(150) NOT NULL,
    tax_id VARCHAR(20) UNIQUE,
    contact_person VARCHAR(100),
    phone_number VARCHAR(20) UNIQUE NOT NULL,
    address_line_1 VARCHAR(255) NOT NULL,
    city VARCHAR(100) NOT NULL,
    registered_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- ********************************************
-- ROTLAR TABLOSU (ROUTES)
-- * Paketlerin gruplanması için (Rotanın kime atandığı burada tutulur).
-- ********************************************
CREATE TABLE routes (
    route_id SERIAL PRIMARY KEY,
    courier_id INT REFERENCES couriers (courier_id) ON DELETE RESTRICT,
    route_status VARCHAR(50) DEFAULT 'Created' -- 'Created', 'In Progress', 'Completed'
);

-- ********************************************
-- VARDİYA TABLOSU (SHIFTS)
-- * Çalışma saatleri ve vardiyaya bağlı rol tanımı.
-- ********************************************
CREATE TABLE shifts (
    shift_id SERIAL PRIMARY KEY,
    courier_id INT NOT NULL REFERENCES couriers (courier_id) ON DELETE CASCADE,
    start_time TIMESTAMP WITH TIME ZONE NOT NULL,
    end_time TIMESTAMP WITH TIME ZONE NOT NULL,
    shift_type VARCHAR(50) DEFAULT 'Normal',
    
    -- Vardiyaya Özel Rol Tanımı
    shift_role VARCHAR(50) NOT NULL DEFAULT 'Courier' -- 'Courier' veya 'Captain'
);

-- ********************************************
-- TESLİMATLAR TABLOSU (DELIVERIES)
-- * Sistemin ana iş yükü, tüm paket bilgileri burada.
-- ********************************************
CREATE TABLE deliveries (
    delivery_id SERIAL PRIMARY KEY,
    
    -- İlişki 1: İşletmeye Bağlantı (GÖNDEREN)
    business_id INT NOT NULL REFERENCES businesses (business_id) ON DELETE RESTRICT,
    
    -- İlişki 2: Kuryeye Bağlantı (ATANAN KİŞİ)
    courier_id INT REFERENCES couriers (courier_id) ON DELETE SET NULL, 
    
    -- İlişki 3: Rotaya Bağlantı
    route_id INT REFERENCES routes (route_id) ON DELETE SET NULL, 
    
    item_type VARCHAR(50) NOT NULL, 
    item_description TEXT,
    weight_kg NUMERIC(5, 2), 
    
    pickup_address VARCHAR(255) NOT NULL,
    dropoff_address VARCHAR(255) NOT NULL,
    
    status VARCHAR(50) NOT NULL DEFAULT 'Pending', 
    
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    assigned_at TIMESTAMP WITH TIME ZONE,
    delivered_at TIMESTAMP WITH TIME ZONE
);

-- ********************************************
-- PUANLAMA TABLOSU (RATINGS)
-- * Kuryelerin işletme/teslimat puanlamaları.
-- ********************************************
CREATE TABLE ratings (
    rating_id SERIAL PRIMARY KEY,
    courier_id INT NOT NULL REFERENCES couriers (courier_id) ON DELETE CASCADE,
    
    entity_type VARCHAR(50) NOT NULL, -- 'Business' veya 'Delivery'
    entity_id INT NOT NULL,            
    
    score INT NOT NULL,               
    comment TEXT,
    rated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    
    -- Puanın 1-5 arasında olmasını zorunlu kılar
    CONSTRAINT valid_score CHECK (score >= 1 AND score <= 5)
);
