version: '3.8'

services:
  # PostgreSQL with PostGIS
  postgres:
    image: postgis/postgis:15-3.3
    container_name: courier-postgres
    environment:
      POSTGRES_DB: courier_db
      POSTGRES_USER: courier_user
      POSTGRES_PASSWORD: courier_password
    ports:
      - "5433:5432"  # Yerel çakışmaları önlemek için 5433 kullanıyoruz
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # Migration scriptlerini devre dışı bırakıyoruz (yeni proje için Flyway tercih edilecek)
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U courier_user -d courier_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - courier-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: courier-redis
    ports:
      - "6380:6379"  # Yerel Redis çakışmalarını önlüyoruz
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - courier-network

  # Zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: courier-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2182:2181"  # Yerel çakışmaları önleme
    networks:
      - courier-network

  # Kafka - düzeltilmiş yapılandırma
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: courier-kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      # Gerekli Kafka parametreleri
      KAFKA_PROCESS_ROLES: broker
      KAFKA_NODE_ID: 1
    ports:
      - "29092:29092"  # Dış erişim için port
      - "9093:9092"    # Yerel çakışmaları önlemek için değiştirildi
    networks:
      - courier-network

  # Spring Boot Backend
  backend:
    build: .
    container_name: courier-backend
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_started
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/courier_db
      SPRING_DATASOURCE_USERNAME: courier_user
      SPRING_DATASOURCE_PASSWORD: courier_password
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      # Enable Flyway to create database tables
      SPRING_FLYWAY_ENABLED: "true"
    ports:
      - "8081:8080"
    networks:
      - courier-network

volumes:
  postgres_data:
  redis_data:

networks:
  courier-network:
    driver: bridge
